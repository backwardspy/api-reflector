name: CI

on:
  push:
    branches: [master]
    tags: ["v[0-9]+.[0-9]+.[0-9]+"]
  pull_request:
    branches: [master]

  # allows manual trigger
  workflow_dispatch:

jobs:
  tests:
    name: Tests
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
        poetry-version: ["1.2"]
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        run: pip install poetry==${{ matrix.poetry-version }}
      - name: Disable poetry virtualenv creation
        run: poetry config virtualenvs.create false
      - name: Install dependencies
        run: poetry install
      - name: Lint with pylint
        run: pylint api_reflector
      - name: Lint with mypy
        run: mypy api_reflector
      - name: Lint with black
        run: black --check .
  publish:
    name: Build & Publish
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    needs: [tests]
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11"]
        poetry-version: ["1.2"]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        run: pip install poetry==${{ matrix.poetry-version }} poetry-dynamic-versioning
      - name: Poetry auth
        run: poetry config pypi-token.pypi ${{ secrets.POETRY_PYPI_TOKEN }}
      - name: Build Package
        run: poetry build
      - name: Publish Package
        run: poetry publish
        continue-on-error: true
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/binkhq/api-reflector
          tags: type=semver,pattern={{version}}
      - name: Docker Login
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Docker Build & Push
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
