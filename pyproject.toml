[tool.poetry]
name = "api-reflector"
version = "0.0.0"
description = "A configurable API mocking service"
authors = ["Chris Latham <cl@bink.com>"]
license = "MIT"
packages = [{ include = "api_reflector" }, { include = "settings.py" }]

[tool.poetry.scripts]
api-reflector-migrate = "api_reflector.migrations.run_migrations:main"

[tool.poetry.dependencies]
python = "^3.9"
Flask = "^2.2.2"
Flask-Admin = "^1.6.0"
pydantic = "^1.10.2"
psycopg2-binary = "^2.9.3"
Flask-SQLAlchemy = "^2.5.1"
SQLAlchemy = "<2"
Jinja2 = "^3.1.2"
Flask-Dance = "^6.1.1"
gunicorn = ">=20.1,<23.0"
python-slugify = "^6.1.2"
alembic = "^1.8.1"
cachetools = "^5.2.0"
sentry-sdk = "^1.9.9"
wtforms = "==2.3.3"
Flask-Cors = ">=3.0.10,<5.0.0"
pendulum = "^2.1.2"
fasteners = "^0.18"
blinker = "^1.5"

[tool.poetry.group.dev.dependencies]
black = "^22.8.0"
mypy = "^1.4.1"
pytest = "^7.1.3"
ptpython = "^3.0.20"
Werkzeug = ">=2.2.2,<4.0.0"
pylint = "^2.15.3"
types-python-slugify = "^6.1.0"
types-cachetools = "^5.2.1"
types-requests = "^2.28.11"

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning>=1.0.0,<2.0.0"]
build-backend = "poetry_dynamic_versioning.backend"

[tool.poetry-dynamic-versioning]
enable = true

[tool.black]
line-length = 120

[tool.isort]
profile = "black"

[tool.mypy]
ignore_missing_imports = true
check_untyped_defs = true
exclude = "api_reflector/migrations/versions/"
plugins = ["sqlalchemy.ext.mypy.plugin", "pydantic.mypy"]

[tool.pylint.messages_control]
max-line-length = 120
ignore = ["settings.py", "wsgi.py"]
disable = ["logging-fstring-interpolation"]
